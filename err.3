.\" Copyright 1999 raf (raf2@zip.com.au)
.TH wee 3  "25 June 1999" "raf" "Twisted Systems Freeware"
.SH NAME
debug,
error,
fatal,
dump,
debugsys,
errorsys,
fatalsys,
dumpsys,
errno_set
\-
general program utilities: identification, debug/error/log messages.
.SH SYNOPSIS
.nf
.B #include <daemon/err.h>
.sp
.BI "void err(const char *" fmt ", ..." )
.sp
.BI "void debug(size_t " level ", const char *" fmt ", ..." )
.sp
.BI "int error(const char *" fmt ", ..." )
.sp
.BI "void fatal(const char *" fmt ", ..." )
.sp
.BI "void dump(const char *" fmt ", ..." )
.sp
.BI "void debugsys(size_t " lvl ", const char *" fmt ", ..." )
.sp
.BI "int errorsys(const char *" fmt ", ..." )
.sp
.BI "void fatalsys(const char *" fmt ", ..." )
.sp
.BI "void dumpsys(const char *" fmt ", ..." )
.sp
.BI "int set_errno(int " errnum )
.fi
.SH DESCRIPTION
.I msg()
outputs a message to
.IR prog_msg() .
.I fmt
is a printf-like format string and processes any remaining arguments
in the same way as printf.
.PP
.I debug()
outputs a debug message if
.I lvl
is less than or equal to the program's current debug level.
.I fmt
is a printf-like format string and processes any remaining arguments
in the same way as printf.
.PP
.I error()
outputs an error message. If the program's name has been supplied using
prog_set_name(), the error message will be preceeded by the name, a colon
and a space.
.I fmt
is a printf-like format string and processes any remaining arguments in the
same way as printf. Returns -1.
.PP
.I fatal()
outputs an error message and exits with a return code of 1. The error
message, will contain the string "fatal: ".
.I fmt
is a printf-like format string and processes any remaining arguments
in the same way as printf.
.PP
.I dump()
outputs an error message and then abort()s the program. The error message,
will contain the string "dump: ".
.I fmt
is a printf-like format string and processes any remaining arguments in the
same way as printf.
.PP
.I debugsys()
outputs a debug message if
.I lvl
is less than or equal to the program's current debug level.
.I fmt
is a printf-like format string and processes any remaining arguments in the
same way as printf. After the message is a colon, a space and the string
version of the current value of errno.
.PP
.I errorsys()
outputs an error message. If the program's name has been supplied using
prog_set_name(), the error message will be preceeded by the name, a colon
and a space.
.I fmt
is a printf-like format string and processes any remaining arguments in the
same way as printf. After the message is a colon, a space and the string
version of the current value of errno. Returns -1.
.PP
.I fatalsys()
outputs an error message and exits with a return code of 1. The error
message, will contain the string "fatal: ".
.I fmt
is a printf-like format string and processes any remaining arguments in the
same way as printf. After the message is a colon, a space and the string
version of the current value of errno.
.PP
.I dumpsys()
outputs an error message and then abort()s the program. The error message,
will contain the string "dump: ".
.I fmt
is a printf-like format string and processes any remaining arguments in the
same way as printf. After the message is a colon, a space and the string
version of the current value of errno.
.PP
.I errno_set()
sets errno to errnum and returns -1.
.SH "SEE ALSO"
.BR libdaemon(3)
